###################################################################
# Docker compose con Proxy inverso para montar varios wordpress
# Con SSL por certbot.
###################################################################
version: '3.7'

services:
  ###################################################################
  # Servicio de NGINX que funje como proxy inverso
  ###################################################################
  nginx-proxy:
    image: jwilder/nginx-proxy
    restart: always
    ports:
      - "80:80"   #Se enlaza el puerto 80 de la VM con el puerto 80 del contenedor HTTP
      - "443:443" #Se enlaza el puerto 443 de la VM con el puerto 443 del contenedor HTTPS
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - certs:/etc/nginx/certs:ro
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
    labels:
      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy #etiqueta para acompañar el contenedor con el NGNIX
      
  ###################################################################
  # Servicio compañero de NGINX que se encarga de general los SSL
  ###################################################################
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
  ###################################################################
  # Servicio que se encarga de Ejecutar el Wordpress 1
  # Documentación de la imagen: https://hub.docker.com/_/wordpress/
  ###################################################################
  wp:
    image: wordpress:php8.0
    restart: always
    expose: 
      - "80" # Se expone el puerto 80 del contenedor a la red interna de docker.
    volumes:
      - ./wp1/config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp1/wp-public:/var/www/html # Full wordpress project
        #- ./wp1/plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
        #- ./wp1/theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db                       #Host del servicio de Bases de Datos
      WORDPRESS_DB_NAME: "${DB_NAME}"             #Nombre de la Base de datos
      WORDPRESS_DB_USER: root                     #Nombre del usuario de la Base de Datos
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}" # Contraseña de la base de datos
      WORDPRESS_TABLE_PREFIX: "${WP_PREFIX}"
      VIRTUAL_HOST: "${WWW_DOMAIN}" #Variable de para el proxy inverso
      LETSENCRYPT_HOST: "${WWW_DOMAIN}" # Variable de para el SSL
      LETSENCRYPT_EMAIL: "${EMAIL}" #correo con el que esta regitrados lo dominios
    depends_on:
      - db
      - nginx-proxy
      - letsencrypt

  ###################################################################
  # Servicio de wpcli para las configuraciones iniciales del wordpress 1
  # Documentación de la imagen: https://hub.docker.com/_/wordpress/
  ################################################################### 
  wpcli:
    image: wordpress:cli-php8.0
    volumes:
      - ./wp1/config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp1/wp-public:/var/www/html
    depends_on:
      - db
      - wp

  ###################################################################
  # Servicio de la BDD de mysql
  # https://hub.docker.com/_/mysql
  ################################################################### 
  db:
    image: mysql:latest
    ports:
      - ${IP}:3306:3306 # change ip if required
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./wp1/wp-data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_NAME}" # Nombre de la base de datos
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}" # Contraseña de root para la base de datos
  ###################################################################
  # Servicio de la BDD de mysql
  # https://hub.docker.com/_/mysql
  ################################################################### 
  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    expose:
      - "80"
    environment:
      #PMA_ARBITRARY: 1
      PMA_HOST: db
      #PMA_ABSOLUTE_URI: "${PMA_URL}" #Variable de para el proxy inverso
      VIRTUAL_HOST: "${PMA_URL}" #Variable de para el proxy inverso
      LETSENCRYPT_HOST: "${PMA_URL}" # Variable de para el SSL
      LETSENCRYPT_EMAIL: "${EMAIL}" #correo con el que esta regitrados lo dominios
    depends_on:
      - db
  ###################################################################
  # Servicio de Explorador de archivos web
  # https://hub.docker.com/r/luisolguin/tiny-files-manager:alpine3.11
  ################################################################### 
  filemngr:
    image: luisolguin/tiny-files-manager:alpine3.11-V0.4
    restart: always
    expose:
      - "80"
    environment:
      TNYF_ADMIN_NICK: "${TFM_ADM}"
      TNYF_ADMIN_PWD: "${TFM_ADMPSW}" 
      TNYF_USR_NICK: "${TFM_ADM}"
      TNYF_USR_PWD: "${TFM_ADMPSW}"  
      VIRTUAL_HOST: "${TFM_URL}" #Variable de para el proxy inverso
      LETSENCRYPT_HOST: "${TFM_URL}" # Variable de para el SSL
      LETSENCRYPT_EMAIL: "${EMAIL}" #correo con el que esta regitrados lo dominios
    volumes:
      - ./wp1:/data      
#====================================================================================

  ###################################################################
  # Servicio que se encarga de Ejecutar el Wordpress 2
  # Documentación de la imagen: https://hub.docker.com/_/wordpress/
  ###################################################################
  wp2:
    image: wordpress:php8.0
    restart: always
    expose: 
      - "80" # Se expone el puerto 80 del contenedor a la red interna de docker.
    volumes:
      - ./wp2/config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp2/wp-public:/var/www/html # Full wordpress project
        #- ./wp1/plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
        #- ./wp1/theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db2                       #Host del servicio de Bases de Datos
      WORDPRESS_DB_NAME: "${DB_NAME2}"             #Nombre de la Base de datos
      WORDPRESS_DB_USER: root                     #Nombre del usuario de la Base de Datos
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD2}" # Contraseña de la base de datos
      WORDPRESS_TABLE_PREFIX: "${WP_PREFIX2}"
      VIRTUAL_HOST: "${WWW_DOMAIN2}" #Variable de para el proxy inverso
      LETSENCRYPT_HOST: "${WWW_DOMAIN2}" # Variable de para el SSL
      LETSENCRYPT_EMAIL: "${EMAIL}" #correo con el que esta regitrados lo dominios
    depends_on:
      - db2
      - nginx-proxy
      - letsencrypt

  ###################################################################
  # Servicio de wpcli para las configuraciones iniciales del wordpress 1
  # Documentación de la imagen: https://hub.docker.com/_/wordpress/
  ################################################################### 
  wpcli2:
    image: wordpress:cli-php8.0
    volumes:
      - ./wp2/config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp2/wp-public:/var/www/html
    depends_on:
      - db2
      - wp2

  ###################################################################
  # Servicio de la BDD de mysql
  # https://hub.docker.com/_/mysql
  ################################################################### 
  db2:
    image: mysql:latest
    ports:
      - ${IP}:3307:3306 # change ip if required
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./wp2/wp-data:/docker-entrypoint-initdb.d
      - db_data2:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_NAME2}" # Nombre de la base de datos
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD2}" # Contraseña de root para la base de datos
  ###################################################################
  # Servicio de la BDD de mysql
  # https://hub.docker.com/_/mysql
  ################################################################### 
  phpmyadmin2:
    image: phpmyadmin:latest
    restart: always
    expose:
      - "80"
    environment:
      #PMA_ARBITRARY: 1
      PMA_HOST: db2
      #PMA_ABSOLUTE_URI: "${PMA_URL}" #Variable de para el proxy inverso
      VIRTUAL_HOST: "${PMA_URL2}" #Variable de para el proxy inverso
      LETSENCRYPT_HOST: "${PMA_URL2}" # Variable de para el SSL
      LETSENCRYPT_EMAIL: "${EMAIL}" #correo con el que esta regitrados lo dominios
      #PMA_PORT: 3306    
    depends_on:
      - db2
  ###################################################################
  # Servicio de Explorador de archivos web
  # https://hub.docker.com/r/luisolguin/tiny-files-manager:alpine3.11
  ################################################################### 
  filemngr2:
    image: luisolguin/tiny-files-manager:alpine3.11-V0.4
    restart: always
    expose:
      - "80"
    environment:
      TNYF_ADMIN_NICK: "${TFM_ADM2}"
      TNYF_ADMIN_PWD: "${TFM_ADMPSW2}" 
      TNYF_USR_NICK: "${TFM_ADM2}"
      TNYF_USR_PWD: "${TFM_ADMPSW2}"  
      VIRTUAL_HOST: "${TFM_URL2}" #Variable de para el proxy inverso
      LETSENCRYPT_HOST: "${TFM_URL2}" # Variable de para el SSL
      LETSENCRYPT_EMAIL: "${EMAIL}" #correo con el que esta regitrados lo dominios
    volumes:
      - ./wp2:/data

volumes:
  db_data2:  
  db_data:
  certs:
  html:
  vhostd:
